name: Run Tests

on:
  workflow_call:
    inputs:
      openapi:
        required: true
        type: string
      format:
        required: true
        type: string
      version:
        required: true
        type: string
      os:
        type: string
        default: ubuntu-latest
      command:
        required: true
        type: string

jobs:
  
  test:

    name: ${{ inputs.openapi }}.${{ inputs.format }} (${{ inputs.version }}) ${{ inputs.os }}
    runs-on: ${{ inputs.os }}
    timeout-minutes: 10
    continue-on-error: ${{ inputs.os == 'macos-latest' }}

    strategy:
      matrix:
        args: [
          "--cancellation-tokens",
          "--internal",
          "--use-api-response",
          "--use-iso-date-format",
          "--match-path ^/pet/.*",
          "--tag pet",
          "--no-deprecated-operations"
        ]

    steps:
    - name: 🛒 Checkout repository
      uses: actions/checkout@v4

    - name: 🛠️ Prepare OpenAPI Spec
      id: prepare_openapi_spec
      run: |
        $filename = "./OpenAPI/${{ inputs.version }}/${{ inputs.openapi }}.${{ inputs.format }}"
        $exists = Test-Path -Path $filename -PathType Leaf
        if ($exists -eq $true) {
          Copy-Item $filename ./openapi.${{ inputs.format }}
          "exists=$true" >> $env:GITHUB_OUTPUT
        } else {
          "exists=$false" >> $env:GITHUB_OUTPUT
        }
      working-directory: test
      shell: pwsh

    - name: 🛠️ Generate code
      run: |
        ${{ inputs.command }} ./openapi.${{ inputs.format }} --no-logging ${{ matrix.args }}
        Copy-Item Output.cs ./ConsoleApp/Net6/
        Copy-Item Output.cs ./ConsoleApp/Net7/
        Copy-Item Output.cs ./ConsoleApp/Net8/
        Copy-Item Output.cs ./ConsoleApp/Net48/
        Copy-Item Output.cs ./ConsoleApp/Net472/
        Copy-Item Output.cs ./ConsoleApp/Net462/
        Copy-Item Output.cs ./ConsoleApp/Net481/
        Copy-Item Output.cs ./ConsoleApp/NetStandard20/
        Copy-Item Output.cs ./ConsoleApp/NetStandard21/
      working-directory: test
      shell: pwsh
      if: steps.prepare_openapi_spec.outputs.exists == 'True'
    
    - name: 🛠️ Publish generated code as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: Generated Code (${{ inputs.openapi }}.${{ inputs.format }}, ${{ inputs.version }}, ${{ inputs.os }})
        path: test/*.cs
      if: steps.prepare_openapi_spec.outputs.exists == 'True'

    - name: 🛠️ Build .NET 6 generated code
      run: dotnet build ./ConsoleApp/Net6/Net6.csproj
      working-directory: test
      if: steps.prepare_openapi_spec.outputs.exists == 'True'

    - name: 🛠️ Build .NET 7 generated code
      run: dotnet build ./ConsoleApp/Net7/Net7.csproj
      working-directory: test
      if: steps.prepare_openapi_spec.outputs.exists == 'True'

    - name: 🛠️ Build .NET 8 generated code
      run: dotnet build ./ConsoleApp/Net8/Net8.csproj
      working-directory: test
      if: steps.prepare_openapi_spec.outputs.exists == 'True'

    - name: 🛠️ Build .NET 4.8.1 generated code
      run: dotnet build ./ConsoleApp/Net481/Net481.csproj
      if: ${{ steps.prepare_openapi_spec.outputs.exists == 'True' && inputs.os == 'windows-2022' }}
      working-directory: test

    - name: 🛠️ Build .NET 4.8 generated code
      run: dotnet build ./ConsoleApp/Net48/Net48.csproj
      working-directory: test
      if: steps.prepare_openapi_spec.outputs.exists == 'True'

    - name: 🛠️ Build .NET 4.7.2 generated code
      run: dotnet build ./ConsoleApp/Net472/Net472.csproj
      working-directory: test
      if: steps.prepare_openapi_spec.outputs.exists == 'True'

    - name: 🛠️ Build .NET 4.6.2 generated code
      run: dotnet build ./ConsoleApp/Net462/Net462.csproj
      working-directory: test
      if: steps.prepare_openapi_spec.outputs.exists == 'True'

    - name: 🛠️ Build .NET Standard 2.0 generated code
      run: dotnet build ./ConsoleApp/NetStandard20/NetStandard20.csproj
      working-directory: test
      if: steps.prepare_openapi_spec.outputs.exists == 'True'

    - name: 🛠️ Build .NET Standard 2.1 generated code
      run: dotnet build ./ConsoleApp/NetStandard21/NetStandard21.csproj
      working-directory: test
      if: steps.prepare_openapi_spec.outputs.exists == 'True'